# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Dockerfile builder
        # You may pin to the exact commit or the version.
        # uses: aevea/action-kaniko@5e25ae9c63e13a7e79955b4ff2d600732449fdf6
        uses: aevea/action-kaniko@v0.6.0
        with:
          # Path to the build context
          path: . # optional, default is .
          # Docker registry where the image will be pushed
          registry: # optional
          # Username used for authentication to the Docker registry
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          # Image name
          image: byndyusoft/github-cli
          # Image tag
          tag: 1.11.0 # optional
          # Enables build cache
          cache: false # optional
          build_file: # optional
          # Prefix to be stripped from the tag
          strip_tag_prefix: # optional
          # Additional arguments to be passed to the kaniko executor
          extra_args: # optional
          # Avoids pushing the image if the build generated the same digest
          skip_unchanged_digest: # optional
          # Tags the built image with additional latest tag
          tag_with_latest: # optional
          # Sets the target stage to build
          target: # optional
